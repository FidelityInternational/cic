#!/usr/bin/env bash

set -e

TIME_WAITED=0
sleep_time=5
max_timeout="50"

function concourse_http_status(){
    echo "$(curl -I http://concourse:8080 2>/dev/null | grep HTTP/1.1 | awk '{print $2}')"
}

until [[ "$(concourse_http_status)" -eq "200" ]] || [[ "${TIME_WAITED}" -eq "${max_timeout}" ]]
do
    echo "waiting for Concourse to come up: $(concourse_http_status)"
    sleep "${sleep_time}"
    TIME_WAITED=$(($TIME_WAITED + $sleep_time))
done;

if [[ "${TIME_WAITED}" -eq "${max_timeout}" ]]
then
    echo "Concourse did not come up in time :("
    exit 1
fi

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
resources_dir="${script_dir}/../resources"
cd "${resources_dir}"

chmod 400 git-server/keys/id_rsa

checkout_dir="checkout"
rm -Rf "${checkout_dir}"

ssh-agent bash -c 'ssh-add git-server/keys/id_rsa; git clone ssh://git@git-server/git-server/repos/application-repo.git checkout'

cd "checkout"

ssh_command="ssh -i ../git-server/keys/id_rsa"

git config --local --add core.sshCommand 'ssh -i ../git-server/keys/id_rsa'
git remote set-url origin ssh://git@localhost:3333/git-server/repos/application-repo.git

cp "${script_dir}/application.py" src/




